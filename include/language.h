#ifndef LANGUAGE_H
#define LANGUAGE_H


/**
 * @brief Definitions for language packs
 * 
 */
typedef enum {
    //Main Menu
    STR_MAIN_MENU_TITLE, STR_NEW_GAME, STR_LOAD_GAME, STR_HIGH_SCORES, STR_EXIT, STR_CHOICE, STR_EXITING_GAME, STR_INVALID_CHOICE_MENU,

    //Character Creation
    STR_PLAYER_CREATION_TITLE, STR_ENTER_NAME, STR_NO_SPACES, STR_NAME_EMPTY, STR_CHOOSE_CLASS, STR_WARRIOR, STR_MAGE, STR_ROGUE, STR_PLAYER_CREATED,

    //Player Status
    STR_PLAYER_STATUS_TITLE, STR_CLASS, STR_LEVEL, STR_HP, STR_STRENGTH, STR_STRENGTH_DETAILS, STR_EXPERIENCE, STR_GOLD, STR_EQUIPMENT, STR_WEAPON, STR_ARMOR, STR_NONE,

    //Adventure Menu
    STR_ADVENTURE_MENU_TITLE, STR_WHAT_TO_DO, STR_ADVENTURE_COMBAT, STR_GO_TO_CITY, STR_SAVE_GAME, STR_RETURN_TO_MAIN_MENU, STR_SAVING_SCORE, STR_GAME_OVER,

    //Fight
    STR_ENEMY_APPEARED, STR_COMBAT_MENU_TITLE, STR_ATTACK, STR_USE_ITEM, STR_FLEE,STR_INVALID_CHOICE, STR_PLAYER_DEALT_DAMAGE, STR_ENEMY_HP_REMAINING,
    STR_CANNOT_FLEE_BOSS, STR_FLEE_SUCCESS, STR_FLEE_GOLD_LOST, STR_FLEE_FAIL, STR_TURN_SKIPPED, STR_ENEMY_DEALT_DAMAGE, STR_PLAYER_HP_REMAINING,
    STR_VICTORY, STR_GOLD_GAINED, STR_BOSS_LOOT_BONUS, STR_DEFEATED,

    //Enemy
    STR_BOSS_FIGHT_WARNING, STR_ENEMY_STATUS_HEADER,

    //Inventory and Items
    STR_INVENTORY_TITLE, STR_INVENTORY_EMPTY, STR_ITEM_USE_PROMPT, STR_HEALTH_POTION_NAME, STR_INVALID_ITEM_CHOICE,
    STR_HP_ALREADY_FULL, STR_USED_POTION, STR_ITEM_NOT_USABLE, STR_ITEM_ADDED_TO_INVENTORY,

    //Level up
    STR_LEVEL_UP, STR_NEW_LEVEL, STR_STATS_INCREASED, STR_EXP_GAINED,

    //City
    STR_CITY_MENU_TITLE, STR_GO_TO_SHOP, STR_RETURN_TO_ADVENTURE, STR_CITY_WELCOME, STR_LEAVING_CITY,

    //Shop
    STR_SHOP_MENU_TITLE, STR_WELCOME_TO_SHOP, STR_BUY_WEAPON, STR_BUY_ARMOR, STR_SELL_ITEM, STR_LEAVE_SHOP,
    STR_FOR_SALE_WEAPONS, STR_WEAPON_STATS, STR_GO_BACK, STR_ALREADY_HAVE_WEAPON, STR_BOUGHT_AND_EQUIPPED, STR_NOT_ENOUGH_GOLD,
    STR_FOR_SALE_ARMORS, STR_ARMOR_STATS, STR_ALREADY_HAVE_ARMOR, STR_SOLD_POTION, STR_NO_POTIONS_TO_SELL,

    //Save and score
    STR_ERROR_SAVE_FAILED, STR_GAME_SAVED_SUCCESS, STR_SAVE_FILE_NOT_FOUND, STR_GAME_LOADED_SUCCESS,
    STR_HIGH_SCORES_TITLE, STR_NO_HIGH_SCORES, STR_HIGH_SCORE_CONGRATS,

    //Helper Functions
    STR_INVALID_INPUT_NUMBER, STR_PRESS_ENTER,

    STRING_COUNT
} StringID;
/**
 * @brief Loads a language pack into memory.
 * 
 * @param lang_code A string representing the language code (e.g., "en", "tr").
 * @return int Returns 1 on successful load, 0 on failure (e.g., file not found).
 */
int loadLanguage(const char* lang_code);
/**
 * @brief Gets the localized string for a specific ID.
 * 
 * @param id The StringID (from the enum) of the string to retrieve.
 * @return const char* A read-only pointer to the localized string.
 * Returns a placeholder (e.g., "???") if the ID is invalid or no language is loaded.
 */
const char* getString(StringID id);

#endif